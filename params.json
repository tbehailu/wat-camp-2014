{"name":"WAT Camp 2014: A Crash-Course in CS61A","tagline":"Instructor: Tsion Behailu","body":"### Welcome to WAT Camp 2014.\r\nHello Everyone! This is the crash-course for CS61A: Structure and Interpretation of Computer Programs. I will be posting all the materials (lesson plan, handouts, assignments, etc.) on this site during our time at WAT Camp. \r\n\r\nWe will also be using Piazza during our time here so please refer to it periodically: https://piazza.com/wat_camp/spring2013/watcamp/home\r\n\r\nBelow, you will find an outline of what we will cover at WAT Camp and links to the materials we will use each day. \r\n\r\n### Pre-WAT Camp Assignments\r\nI want to make sure you do a few things during the next couple days to avoid wasting time on logistical issues. \r\n\r\n1. Please make sure you have the latest version of python installed (I believe it is version 3.3). If you do, when you type \"python3 -V\" in your terminal, it should list 3.3 as the version installed. If this is not the case, please go to this website and update it: http://www.python.org/getit/\r\nI am more familiar with this process on Macs, but if you run into any trouble with your respective operating system, let me know. \r\n\r\nFor more information, please read \"1.1.2 Installing Python 3\" from Fall 2013 course page: http://www-inst.eecs.berkeley.edu/~cs61a/fa13/\r\n\r\n2. Find a text editor you will be using to write your code in. A text editor is a type of program used for editing plain text files. This just means it makes your code easier to read and edit. I have used TextWrangler before, but there are many others you can choose from. They are usually free and easy to download online. Some others I have heard about are: Sublime, Notepad++, Vim, etc.\r\n\r\n3. Now that you have python3 and a text editor, I would like you to create a file called \"hello.py\". In this, I would like you to write a simple \"Hello, World\" program in python. If you are not familiar with this, it is just a program that prints the string \"Hello, World\". This is fairly simple and shouldn't take more than 1 or 2 lines. Then, I would like you to practice running this file from your terminal. Navigate to the directory with the hello.py file and type in \"python3 hello.py\" on the terminal command line. The string \"Hello, World\" should now appear. Congratulations! You've just run your first python program! \r\n\r\nIf you have any problems with ANY of these steps, let me know either through posts on here (public or private) or through email (tsion@berkeley.edu). \r\n\r\nPlease try to get this done whenever you have time so we can spend more time on more conceptual topics. \r\n\r\nGood luck!\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}